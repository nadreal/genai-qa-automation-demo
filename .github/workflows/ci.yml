name: web-automation-demo
on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create venv
        run: python -m venv env && source env/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Run tests inside Docker (do NOT generate Allure inside the container)
      - name: Run tests inside Docker
        continue-on-error: true
        run: |
          mkdir -p allure-results allure-report docs
          docker run --rm \
            -v "${{ github.workspace }}/allure-results:/allure-results" \
            -v "${{ github.workspace }}/allure-report:/allure-report" \
            web-automation-demo \
            sh -c "pytest --alluredir=/allure-results || true"

      # Generate Allure report using a small Docker image that contains Allure CLI
      - name: Generate Allure report (using tobix/allure-cli)
        run: |
          # create directories if missing
          mkdir -p allure-results allure-report
          # If no results, skip generation but keep an empty index to avoid failing later
          if [ ! -d "allure-results" ] || [ -z "$(ls -A allure-results 2>/dev/null || true)" ]; then
            echo "No allure results found; creating placeholder report."
            mkdir -p allure-report
            echo "<!-- no allure results -->" > allure-report/index.html
          else
            # Run the Allure CLI inside a small Docker image to generate the HTML report
            docker run --rm \
              -v "${{ github.workspace }}/allure-results:/results" \
              -v "${{ github.workspace }}/allure-report:/report" \
              tobix/allure-cli:latest generate /results -o /report --clean
          fi

      - name: Upload Allure results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Upload Allure HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  deploy-allure:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
